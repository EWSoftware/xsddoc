<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5">

	<!-- Build Settings -->

	<PropertyGroup>
		<BuildDir>$(MSBuildProjectDirectory)\</BuildDir>
		<CustomTasksDir>$(BuildDir)Custom Tasks\</CustomTasksDir>
		<ProjectDir>$(BuildDir)..\</ProjectDir>
		<SourceDir>$(ProjectDir)Source\</SourceDir>
		<SetupDir>$(ProjectDir)Setup\</SetupDir>
		<EtcDir>$(ProjectDir)Etc\</EtcDir>
		<LibDir>$(ProjectDir)Lib\</LibDir>
		<HelpDir>$(ProjectDir)Help\</HelpDir>
		<SamplesDir>$(ProjectDir)Samples\</SamplesDir>
		<OutputDir>$(ProjectDir)Output\</OutputDir>
		<GeneratedBinaries>$(OutputDir)Bin\</GeneratedBinaries>
		<GeneratedHelp>$(OutputDir)Help\</GeneratedHelp>
		<GeneratedSetup>$(OutputDir)Setup\</GeneratedSetup>
		<GeneratedSourceCode>$(OutputDir)Source\</GeneratedSourceCode>
		<GeneratedSamples>$(OutputDir)Samples\</GeneratedSamples>
		<GeneratedRelease>$(OutputDir)Release\</GeneratedRelease>
		<BootstrappedShfb>$(OutputDir)SHFB\</BootstrappedShfb>
		<Configuration>Release</Configuration>
	</PropertyGroup>

	<!-- External projects -->

	<Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>

	<!-- External Tasks -->

	<UsingTask AssemblyFile="$(CustomTasksDir)XsdDocumentation.Build.dll" TaskName="XsdDocumentation.Build.GetFileVersionInfo" />
	<UsingTask AssemblyFile="$(CustomTasksDir)XsdDocumentation.Build.dll" TaskName="XsdDocumentation.Build.RemoveTfsBindings" />

	<!-- Build -->

	<Target Name="Build">
		<CallTarget Targets="Clean" />
		<CallTarget Targets="Compile" />
		<CallTarget Targets="GenerateHelp" />
		<CallTarget Targets="GenerateSetup" />
		<CallTarget Targets="GenerateSourceCode" />
		<CallTarget Targets="GenerateSamples" />
		<CallTarget Targets="GenerateRelease" />
	</Target>

	<!-- Clean -->

	<Target Name="Clean">
		<ItemGroup>
			<AllSolutionFiles Include="$(SourceDir)**\*.sln" />
			<AllSolutionFiles Include="$(SetupDir)**\*.sln" />
			<CompilationFiles Include="$(ProjectDir)**\bin\**\*.*" />
			<CompilationFiles Include="$(ProjectDir)**\obj\**\*.*" />
		</ItemGroup>
		<MSBuild Projects="@(AllSolutionFiles)" Targets="Clean" />
		<Delete Files="@(CompilationFiles)" />
		<RemoveDir Directories="$(CustomTasksDir)" />
		<RemoveDir Directories="$(OutputDir)" />
	</Target>

	<!-- Compile MSBuild tasks needed by the build process itself -->

	<Target Name="CompileBuildTasks">
		<ItemGroup>
			<CustomBuildProjects Include="$(SourceDir)XsdDocumentation.Build\XsdDocumentation.Build.csproj" />
		</ItemGroup>
		<MSBuild Projects="@(CustomBuildProjects)" Targets="Build" Properties="Configuration=$(Configuration);OutDir=$(CustomTasksDir)" />
	</Target>

	<!-- Compile -->

	<Target Name="Compile">
		<!-- First we have to compile our projects. -->
		<MSBuild Projects="$(SourceDir)XsdDocumentation.sln" Targets="XsdDocumentation_PlugIn;XsdDocumentation_BuildComponents"
				 Properties="Configuration=$(Configuration);OutDir=$(GeneratedBinaries)" />

		<!-- Rename build component file -->
		<Copy SourceFiles="$(GeneratedBinaries)XsdDocumentation.BuildComponents.dll.config"
			  DestinationFiles="$(GeneratedBinaries)XsdDocumentation.BuildComponents.components" />
		<Delete Files="$(GeneratedBinaries)XsdDocumentation.BuildComponents.dll.config" />

		<!-- Rename plugin file -->
		<Copy SourceFiles="$(GeneratedBinaries)XsdDocumentation.PlugIn.dll"
			  DestinationFiles="$(GeneratedBinaries)XsdDocumentation.PlugIn.plugins" />
		<Delete Files="$(GeneratedBinaries)XsdDocumentation.PlugIn.dll" />

		<!-- Delete all files that are already part of SHFB. -->
		<ItemGroup>
			<ShfbFiles Include="$(SHFBROOT)\*.*" />
		</ItemGroup>
		<Delete Files="@(ShfbFiles->'$(GeneratedBinaries)%(filename)%(extension)')" />

		<!-- Copy in required runtime files. -->
		<ItemGroup>
			<MediaFiles Include="$(EtcDir)Media\**\*.*" />
		</ItemGroup>
		<Copy SourceFiles="@(MediaFiles)" DestinationFolder="$(GeneratedBinaries)Media\%(RecursiveDir)" />
		<Copy SourceFiles="$(EtcDir)Schemas\AnnotationTranform.xslt" DestinationFolder="$(GeneratedBinaries)" />
	</Target>

	<!-- Get Version -->

	<Target Name="GetVersion" DependsOnTargets="CompileBuildTasks">
		<GetFileVersionInfo File="$(GeneratedBinaries)XsdDocumentation.dll">
			<Output TaskParameter="FileVersion"
					PropertyName="XsdDocVersion" />
			<Output TaskParameter="LegalCopyright"
					PropertyName="XsdDocCopyright"/>
		</GetFileVersionInfo>
	</Target>

	<!-- Generate Help -->

	<Target Name="GenerateHelp" DependsOnTargets="GetVersion">
		<!-- We copy the complete SHFB installation to the output folder in order
		     to bootstrap XSDDoc since we need ourself to generate documenation for
		     our schemas.
		-->
		<ItemGroup>
			<ShfbFiles Include="$(SHFBROOT)**\*.*" />
			<XsdFiles Include="$(GeneratedBinaries)**\*.*" />
		</ItemGroup>
		<Copy SourceFiles="@(ShfbFiles)" DestinationFolder="$(BootstrappedShfb)%(RecursiveDir)" />
		<Copy SourceFiles="@(XsdFiles)" DestinationFolder="$(BootstrappedShfb)XsdDoc\%(RecursiveDir)" />

		<!-- Now we can run SHFB from our output folder. This is done by providing overriding
		     the SHFBROOT property
		-->
		<MSBuild Projects="$(HelpDir)Help.shfbproj"
				 Properties="SHFBROOT=$(BootstrappedShfb);OutputPath=$(GeneratedHelp);HelpFileVersion=$(XsdDoc);CopyrightText=[v{%40HelpFileVersion}] $(XsdDocCopyright)" />
	</Target>

	<!-- Generate Setup -->

	<Target Name="GenerateSetup">
		<MSBuild Projects="$(SetupDir)Setup.sln" Targets="Rebuild"
				 Properties="Configuration=$(Configuration);OutDir=$(GeneratedSetup);" />
	</Target>

	<!-- Generate Source Code -->

	<Target Name="GenerateSourceCode" DependsOnTargets="CompileBuildTasks">
		<ItemGroup>
			<SourceCodeFiles Include="$(ProjectDir)**\*.*"
							 Exclude="$(OutputDir)**;$(LibDir)**;$(ProjectDir)**\bin\**;$(ProjectDir)**\obj\**;$(ProjectDir)**\*.scc;$(ProjectDir)**\*.vssscc;$(ProjectDir)**\*.vspscc;$(ProjectDir)**\*.suo;$(ProjectDir)**\*.cache;$(ProjectDir)**\*.user;$(ProjectDir)**\*.resharper" />
		</ItemGroup>

		<Copy SourceFiles="@(SourceCodeFiles)" DestinationFolder="$(GeneratedSourceCode)%(RecursiveDir)" />
		<Exec Command="attrib -r -h /s" WorkingDirectory="$(GeneratedSourceCode)" />

		<!-- For some strange reason, excluding $(CustomTasksDir)**\*.* does not work. I assume there are some weird issues
		     in MSBuild that causes currently opened/locked files not being added correctly to the list of exclusions.
		-->
		<RemoveDir Directories="$(GeneratedSourceCode)\Build\Custom Tasks" />

		<ItemGroup>
			<SolutionFiles Include="$(GeneratedSourceCode)Source\XsdDocumentation.sln" />
			<SolutionFiles Include="$(GeneratedSourceCode)Setup\Setup.sln" />
		</ItemGroup>
		<RemoveTfsBindings SolutionFiles="@(SolutionFiles)" />
	</Target>

	<!-- Generate Samples -->

	<Target Name="GenerateSamples" DependsOnTargets="GetVersion">
		<RemoveDir Directories="$(GeneratedSamples)" />

		<!-- Compile sample projects files -->

		<ItemGroup>
			<SampleProjectCloneDetective Include="$(SamplesDir)CloneDetective\Help.shfbproj" />
			<SampleProjectWiX Include="$(SamplesDir)WiX\Help.shfbproj" />
			<SampleProjectXml Include="$(SamplesDir)Xml\Help.shfbproj" />
		</ItemGroup>

		<MSBuild Projects="@(SampleProjectCloneDetective)"
				 Properties="OutputPath=$(GeneratedSamples)CloneDetective;HelpFileVersion=$(XsdDocVersion)" />
		<MSBuild Projects="@(SampleProjectWiX)"
				 Properties="OutputPath=$(GeneratedSamples)WiX;HelpFileVersion=$(XsdDocVersion)" />
		<MSBuild Projects="@(SampleProjectXml)"
				 Properties="OutputPath=$(GeneratedSamples)Xml;HelpFileVersion=$(XsdDocVersion)" />

		<!-- Delete all non CHM files -->

		<ItemGroup>
			<NonChmFiles Include="$(GeneratedSamples)**\*.*" Exclude="$(GeneratedSamples)**\*.chm" />
		</ItemGroup>

		<Delete Files="@(NonChmFiles)" />

		<!-- Copy sample source code -->

		<ItemGroup>
			<SampleSourceCloneDetective Include="$(SamplesDir)CloneDetective\**\*.*" />
			<SampleSourceWiX Include="$(SamplesDir)WiX\**\*.*" />
			<SampleSourceXml Include="$(SamplesDir)Xml\**\*.*" />
		</ItemGroup>

		<Copy SourceFiles="@(SampleSourceCloneDetective)" DestinationFolder="$(GeneratedSamples)CloneDetective\Source\%(RecursiveDir)" />
		<Copy SourceFiles="@(SampleSourceWiX)" DestinationFolder="$(GeneratedSamples)WiX\Source\%(RecursiveDir)" />
		<Copy SourceFiles="@(SampleSourceXml)" DestinationFolder="$(GeneratedSamples)Xml\Source\%(RecursiveDir)" />
		<Exec Command="attrib -r -h /s" WorkingDirectory="$(GeneratedSamples)" />
	</Target>
	
	<!-- Generate Release -->

	<Target Name="GenerateRelease">
		<ItemGroup>
			<GeneratedBuildServerFiles Include="$(GeneratedBinaries)\**\*.*" />
			<GeneratedSourceCodeFiles Include="$(GeneratedSourceCode)\**\*.*" />
			<GeneratedSetupFiles Include="$(GeneratedSetup)\**\*.*" />
			<GeneratedSampleFiles Include="$(GeneratedSamples)\**\*.*" />
		</ItemGroup>

		<RemoveDir Directories="$(GeneratedRelease)" />
		<MakeDir Directories="$(GeneratedRelease)" />
		<Zip WorkingDirectory="$(GeneratedBinaries)" Files="@(GeneratedBuildServerFiles)" ZipFileName="$(GeneratedRelease)XsdDoc_BuildServer.zip" />
		<Zip WorkingDirectory="$(GeneratedSourceCode)" Files="@(GeneratedSourceCodeFiles)" ZipFileName="$(GeneratedRelease)XsdDoc_Source.zip" />
		<Zip WorkingDirectory="$(GeneratedSetup)" Files="@(GeneratedSetupFiles)" ZipFileName="$(GeneratedRelease)XsdDoc_Setup.zip" />
		<Zip WorkingDirectory="$(GeneratedSamples)" Files="@(GeneratedSampleFiles)" ZipFileName="$(GeneratedRelease)XsdDoc_Samples.zip" />
	</Target>
</Project>