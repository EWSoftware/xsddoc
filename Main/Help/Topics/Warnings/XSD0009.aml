<?xml version="1.0" encoding="utf-8"?>
<topic id="c5c79400-782e-4439-a83e-80ba0c845f7f" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
								 xmlns:xlink="http://www.w3.org/1999/xlink"
								 xmlns:xsd="http://schemas.xsddoc.codeplex.com/schemaDoc/2009/3">
		<introduction>
			<para>
				The complex type '<placeholder>Name1</placeholder>' cannot be extended with
				element '<placeholder>Name2</placeholder>' as '<placeholder>Name1</placeholder>'
				does not contain an <codeInline>xs:any</codeInline> element.
			</para>
		</introduction>
		<section address="cause">
			<title>Cause</title>
			<content>
				<para>
					The error is caused if the <xsd:xmlEntityReference>http://schemas.xsddoc.codeplex.com/schemaDoc/2009/3#T/schemaDocType/parent</xsd:xmlEntityReference>
					documentation element is used to indicate that an element extends a complex type
					but this complex type is not open for extension because it does not contain an
					<codeInline>xs:any</codeInline> declaration.
				</para>
				<para>
					For example, in the following schema the element <codeInline>element</codeInline> declares
					that it extends the complexType <codeInline>complexType</codeInline> which is not extensible:
				</para>
				<code language="xml" xml:space="preserve">&lt;xs:schema targetNamespace="http://schemas.example.org/XSD0009"
		   xmlns="http://schemas.example.org/XSD0009"
		   xmlns:xsd="http://schemas.xsddoc.codeplex.com/schemaDoc/2009/3"
		   xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5"
		   elementFormDefault="qualified"
		   xmlns:xs="http://www.w3.org/2001/XMLSchema">
	&lt;xs:complexType name="complexType">
		&lt;xs:sequence>
		&lt;/xs:sequence>
	&lt;/xs:complexType>
	&lt;xs:element name="element">
		&lt;xs:annotation>
			&lt;xs:appinfo>
				&lt;xsd:schemaDoc>
					&lt;xsd:parent uri="http://schemas.example.org/XSD0009#G/group"/>
				&lt;/xsd:schemaDoc>
			&lt;/xs:appinfo>
		&lt;/xs:annotation>
	&lt;/xs:element>
&lt;/xs:schema></code>
			</content>
		</section>
		<section>
			<title>Solution</title>
			<content>
				<para>
					The solution is to make the complex type <codeInline>complexType</codeInline> extensible
					by adding an <codeInline>xs:any</codeInline> child:
				</para>
				<code language="xml" xml:space="preserve">&lt;xs:schema targetNamespace="http://schemas.example.org/XSD0009"
		   xmlns="http://schemas.example.org/XSD0009"
		   xmlns:xsd="http://schemas.xsddoc.codeplex.com/schemaDoc/2009/3"
		   xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5"
		   elementFormDefault="qualified"
		   xmlns:xs="http://www.w3.org/2001/XMLSchema">
	&lt;xs:complexType name="complexType">
		&lt;xs:sequence>
			&lt;xs:any namespace="##targetNamespace" processContents="lax" />
		&lt;/xs:sequence>
	&lt;/xs:complexType>
	&lt;xs:element name="element">
		&lt;xs:annotation>
			&lt;xs:appinfo>
				&lt;xsd:schemaDoc>
					&lt;xsd:parent uri="http://schemas.example.org/XSD0009#G/group"/>
				&lt;/xsd:schemaDoc>
			&lt;/xs:appinfo>
		&lt;/xs:annotation>
	&lt;/xs:element>
&lt;/xs:schema></code>
			</content>
		</section>
		<relatedTopics>
			<link xlink:href="88d67097-41d0-4dd5-8317-e476b7dc6a56" />
			<xsd:xmlEntityReference>http://schemas.xsddoc.codeplex.com/schemaDoc/2009/3#T/schemaDocType/parent</xsd:xmlEntityReference>
		</relatedTopics>
	</developerConceptualDocument>
</topic>